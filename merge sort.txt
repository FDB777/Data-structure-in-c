#include <stdio.h>

int arr[100], n;
void display(int arr[], int n) {
    int i;
    for (i = 0; i < n; i++) {
    printf("%d ", arr[i]);
    }
    printf("\n");
}
void create(int arr[], int n) {
    int i;
    printf("Enter all the elements:\n");
    for (i = 0; i < n; i++) {
    scanf("%d", &arr[i]);
    }
    display(arr, n);
}
void merge(int arr[], int l, int m, int h) {
    int i = l;
    int j = m + 1;
    int k = 0;
    int b[100];
    while (i <= m && j <= h) {
        if (arr[i] <= arr[j]) {
            b[k] = arr[i];
            i = i + 1;
        } 
        else {
            b[k] = arr[j];
            j = j + 1;
        }
        k = k + 1;
    }
    while (i <= m) {
        b[k] = arr[i];
        i = i + 1;
        k = k + 1;
    }
    while (j <= h) {
        b[k] = arr[j];
        k = k + 1;
        j = j + 1;
}
for (i = l, k = 0; i <= h; i++, k++) {
    arr[i] = b[k];
}
printf("After merging from index %d to %d: ", l, h);
display(arr, n);
}
void mergesort(int arr[], int l, int h) {
    if (l < h) {
        int m = (l + h) / 2;
        mergesort(arr, l, m);
        mergesort(arr, m + 1, h);
        merge(arr, l, m, h);
    }
}
int main() {
int ch;
    do {
        printf("==== Menu ====\n1. Create\n2. Merge Sort\n3. Display\n4. Exit\n");
        scanf("%d", &ch);
        if (ch == 4) {
            break;
        }
        switch (ch) {
            case 1: {
                printf("Enter number of elements: ");
                scanf("%d", &n);
                create(arr, n);
                break;
            }
            case 2: {
                mergesort(arr, 0, n - 1);
                printf("Array has been sorted.\n");
                break;
            }
            case 3: {
                display(arr, n);
            break;
            }
            case 4: {
                printf("Exiting...\n");
            break;
            }
        }
    } while (ch != 4);
return 0;
}