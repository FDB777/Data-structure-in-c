#include <stdio.h>
#include <stdlib.h>
#define TABLE_SIZE 10

int hashTable[TABLE_SIZE];
int isOccupied[TABLE_SIZE] = {0};

void insertLinearProbing(int key) {
    int index = key % TABLE_SIZE, originalIndex = index, i = 0;
    while (isOccupied[index]) {
        index = (originalIndex + ++i) % TABLE_SIZE;
        if (index == originalIndex) {
            printf("Hash table is full. Cannot insert %d.\n", key);
            return;
        }
    }
    hashTable[index] = key;
    isOccupied[index] = 1;
    printf("Inserted %d at index %d using Linear Probing.\n", key, index);
}

void insertQuadraticProbing(int key) {
    int index = key % TABLE_SIZE, i = 0;
    while (isOccupied[(index + i * i) % TABLE_SIZE]) {
        i++;
        if (i == TABLE_SIZE) {
            printf("Hash table is full. Cannot insert %d.\n", key);
            return;
        }
    }
    index = (index + i * i) % TABLE_SIZE;
    hashTable[index] = key;
    isOccupied[index] = 1;
    printf("Inserted %d at index %d using Quadratic Probing.\n", key, index);
}

void displayTable() {
    printf("Index\tValue\n");
    for (int i = 0; i < TABLE_SIZE; i++) {
        printf("%d\t%d\n", i, hashTable[i]);
    }
}

void main() {
    int choice, key, method;
    for (int i = 0; i < TABLE_SIZE; i++) hashTable[i] = -1;

    while (1) {
        printf("\nMenu:\n1. Insert\n2. Display\n3. Exit\nEnter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("Enter key to insert: ");
                scanf("%d", &key);
                printf("Choose collision resolution method:\n1. Linear Probing\n2. Quadratic Probing\nEnter your choice: ");
                scanf("%d", &method);
                if (method == 1) insertLinearProbing(key);
                else if (method == 2) insertQuadraticProbing(key);
                else printf("Invalid method choice.\n");
                break;
            case 2:
                displayTable();
                break;
            case 3:
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
}
